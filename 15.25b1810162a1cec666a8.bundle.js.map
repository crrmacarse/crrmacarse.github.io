{"version":3,"sources":["webpack:///./src/components/public/home/index.tsx"],"names":["fast","tension","friction","slow","mass","trans","x","y","pressed","setPressed","t","trail","set","role","className","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","style","position","width","height","id","in","result","stdDeviation","values","onMouseMove","e","xy","clientX","clientY","map","props","key","div","transform","interpolate"],"mappings":"2FAAA,4CAIMA,EAAO,CAAEC,QAAS,KAAMC,SAAU,IAClCC,EAAO,CAAEC,KAAM,GAAIH,QAAS,IAAKC,SAAU,IAC3CG,EAAQ,SAACC,EAAWC,GAAc,qBAAeD,EAAC,MAAMC,EAAC,kCAwChD,UAtCF,WACL,6BAACC,EAAA,KAASC,EAAA,KACRC,EAAA,cAAAA,EACF,qFAACC,EAAA,KAAOC,EAAA,KAKd,OACE,yBACEC,KAAK,eACLC,UAAU,yDACVC,YAAa,WAAM,OAAAN,GAAW,IAC9BO,UAAW,WAAM,OAAAP,GAAW,IAC5BQ,aAAc,WAAM,OAAAR,GAAW,IAC/BS,WAAY,WAAM,OAAAT,GAAW,KAE7B,yBAAKU,MAAO,CAAEC,SAAU,WAAYC,MAAO,EAAGC,OAAQ,IACpD,4BAAQC,GAAG,OACT,oCAAgBC,GAAG,gBAAgBC,OAAO,OAAOC,aAAa,OAC9D,mCAAeF,GAAG,OAAOG,OAAO,gDAGpC,yBAAKb,UAAW,eAAcN,EAAU,oBAAsB,IAAMoB,YAAa,SAACC,GAAM,OAAAjB,EAAI,CAAEkB,GAAI,CAACD,EAAEE,QAASF,EAAEG,aAC7GrB,EAAMsB,KAAI,SAACC,EAAYC,GAAQ,OAC9B,kBAAC,IAASC,IAAG,CAACD,IAAKA,EAAKhB,MAAO,CAAEkB,UAAWH,EAAMJ,GAAGQ,YAAYjC,UAGrE,yBAAKS,UAAU,uBACb,4BAAKJ,EAAE,eACP,uBAAGI,UAAU,+CACVJ,EAAE","file":"15.25b1810162a1cec666a8.bundle.js","sourcesContent":["import React, { useState } from 'react';\nimport { useTrail, animated } from 'react-spring';\nimport { useTranslation } from 'react-i18next';\n\nconst fast = { tension: 1200, friction: 40 };\nconst slow = { mass: 10, tension: 200, friction: 50 };\nconst trans = (x: number, y: number) => `translate3d(${x}px,${y}px,0) translate3d(-50%,-50%,0)`;\n\nconst Home = () => {\n  const [pressed, setPressed] = useState(false);\n  const { t } = useTranslation();\n  const [trail, set] = useTrail<any>(3, () => (\n    { xy: [0, 0], config: (i: any) => (i === 0 ? fast : slow) }\n  ));\n\n\n  return (\n    <div\n      role=\"presentation\"\n      className=\"home-section flex flex-col items-center justify-center\"\n      onMouseDown={() => setPressed(true)}\n      onMouseUp={() => setPressed(false)}\n      onTouchStart={() => setPressed(true)}\n      onTouchEnd={() => setPressed(false)}\n    >\n      <svg style={{ position: 'absolute', width: 0, height: 0 }}>\n        <filter id=\"goo\">\n          <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"30\" />\n          <feColorMatrix in=\"blur\" values=\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 30 -7\" />\n        </filter>\n      </svg>\n      <div className={`hooks-main ${pressed ? 'rainbow-animation' : ''}`} onMouseMove={(e) => set({ xy: [e.clientX, e.clientY] })}>\n        {trail.map((props: any, key) => (\n          <animated.div key={key} style={{ transform: props.xy.interpolate(trans) }} />\n        ))}\n      </div>\n      <div className=\"z-10 cursor-default\">\n        <h1>{t('home.title')}</h1>\n        <p className=\"text-xs lg:text-lg text-center lg:text-left\">\n          {t('home.subtitle')}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}